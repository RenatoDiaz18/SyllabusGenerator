package prototipo;

import Clases.FilaResumen;
import Clases.Semana;
import Clases.Silabo;
import Clases.Unidad;
import ClasesSoporte.Evidencia;
import ClasesSoporte.HabilidadRequerida;
import ClasesSoporte.RangoSemana;
import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.*;
import prototipo.modelos.table.Evidencias2TableModel;
import prototipo.modelos.table.HabilidadesTableModel;
import prototipo.modelos.table.ResumenUnidadTableModel;
import prototipo.modelos.table.SemanaTableModel;
import static Data.Data.*;

public class JDFormularioUnidad extends javax.swing.JDialog {

    private HabilidadesTableModel habilidadesModel;
    private Evidencias2TableModel evidenciasModel;
    private SemanaTableModel semanasModel;

    private Unidad unidadActual;
    private List<Unidad> unidades = new ArrayList<>();
    private Silabo silabus;
    private boolean aceptado = false;

    private ResumenUnidadTableModel resumenModel;

    public JDFormularioUnidad(java.awt.Frame parent, boolean modal, Silabo silabo) {
        super(parent, modal);
        habilidadesModel = new HabilidadesTableModel(new ArrayList<>());
        evidenciasModel = new Evidencias2TableModel(new ArrayList<>());
        semanasModel = new SemanaTableModel();
        silabus=  silabo;

        initComponents();

        tblHabilidadRequerida.setModel(habilidadesModel);
        tblEvidencias.setModel(evidenciasModel);
        tblSemana.setModel(semanasModel);

        resumenModel = new ResumenUnidadTableModel(new ArrayList<>());
        tblResumenUnidad.setModel(resumenModel);

        // Configuras el spinner de semanas
        spNumeroSemanas.setModel(new SpinnerNumberModel(0, 0, 16, 1));

        spNumeroSemanas.addChangeListener(evt -> spNumeroSemanasStateChanged());
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Background = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        btnCancelar = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane17 = new javax.swing.JScrollPane();
        tblResumenUnidad = new javax.swing.JTable();
        lblNumeroUnidad11 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        lblHabilidadReq = new javax.swing.JLabel();
        spNumeroUnidad = new javax.swing.JSpinner();
        lblSemana5 = new javax.swing.JLabel();
        lblSemana = new javax.swing.JLabel();
        lblEvidencias = new javax.swing.JLabel();
        lblNumeroUnidad = new javax.swing.JLabel();
        lblDesempeño = new javax.swing.JLabel();
        lblTituloUnidad = new javax.swing.JLabel();
        txtDesempeño = new javax.swing.JTextField();
        txtNombreUnidad = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        lblNumeroUnidad13 = new javax.swing.JLabel();
        btnCancelar2 = new javax.swing.JButton();
        jScrollPane19 = new javax.swing.JScrollPane();
        tblHabilidadRequerida = new javax.swing.JTable();
        jScrollPane20 = new javax.swing.JScrollPane();
        tblEvidencias = new javax.swing.JTable();
        btnEvidenciaAgregar = new javax.swing.JButton();
        jScrollPane21 = new javax.swing.JScrollPane();
        tblSemana = new javax.swing.JTable();
        btnSemanaAgregar = new javax.swing.JButton();
        btnModificarHabilidades = new javax.swing.JButton();
        btnModificarEvidencias = new javax.swing.JButton();
        btnHabilidadAgregar = new javax.swing.JButton();
        btnModificarSemana = new javax.swing.JButton();
        spNumeroSemanas = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(204, 204, 204));

        Background.setBackground(new java.awt.Color(255, 255, 255));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnCancelar.setBackground(new java.awt.Color(51, 153, 255));
        btnCancelar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnAceptar.setBackground(new java.awt.Color(51, 153, 255));
        btnAceptar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btnAceptar.setForeground(new java.awt.Color(255, 255, 255));
        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        tblResumenUnidad.setBackground(new java.awt.Color(204, 204, 204));
        tblResumenUnidad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane17.setViewportView(tblResumenUnidad);

        lblNumeroUnidad11.setFont(new java.awt.Font("SF UI  Text Med", 1, 12)); // NOI18N
        lblNumeroUnidad11.setForeground(new java.awt.Color(0, 102, 204));
        lblNumeroUnidad11.setText("• Lista    ");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblNumeroUnidad11))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblNumeroUnidad11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setToolTipText("");

        lblHabilidadReq.setFont(new java.awt.Font("SF UI  Text Med", 1, 12)); // NOI18N
        lblHabilidadReq.setText("•  Habilidades Requeridas");

        spNumeroUnidad.setEnabled(false);

        lblSemana5.setFont(new java.awt.Font("SF UI  Text Med", 1, 12)); // NOI18N
        lblSemana5.setText(" ");

        lblSemana.setFont(new java.awt.Font("SF UI  Text Med", 1, 12)); // NOI18N
        lblSemana.setText("•  Semana");

        lblEvidencias.setFont(new java.awt.Font("SF UI  Text Med", 1, 12)); // NOI18N
        lblEvidencias.setText("•   Evidencias");

        lblNumeroUnidad.setFont(new java.awt.Font("SF UI  Text Med", 1, 12)); // NOI18N
        lblNumeroUnidad.setText("Numero de Unidad");

        lblDesempeño.setFont(new java.awt.Font("SF UI  Text Med", 1, 12)); // NOI18N
        lblDesempeño.setText("Desempeño");

        lblTituloUnidad.setFont(new java.awt.Font("SF UI  Text Med", 1, 12)); // NOI18N
        lblTituloUnidad.setText("Titulo de la Unidad");

        txtDesempeño.setEditable(false);
        txtDesempeño.setBackground(new java.awt.Color(204, 204, 204));
        txtDesempeño.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N

        txtNombreUnidad.setEditable(false);
        txtNombreUnidad.setBackground(new java.awt.Color(204, 204, 204));
        txtNombreUnidad.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N

        btnGuardar.setBackground(new java.awt.Color(51, 153, 255));
        btnGuardar.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        lblNumeroUnidad13.setFont(new java.awt.Font("SF UI  Text Med", 1, 12)); // NOI18N
        lblNumeroUnidad13.setForeground(new java.awt.Color(0, 102, 204));
        lblNumeroUnidad13.setText("•    Datos");

        btnCancelar2.setBackground(new java.awt.Color(51, 153, 255));
        btnCancelar2.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        btnCancelar2.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar2.setText("Cancelar");
        btnCancelar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelar2ActionPerformed(evt);
            }
        });

        tblHabilidadRequerida.setModel(this.semanasModel);
        jScrollPane19.setViewportView(tblHabilidadRequerida);

        tblEvidencias.setModel(this.evidenciasModel);
        jScrollPane20.setViewportView(tblEvidencias);

        btnEvidenciaAgregar.setBackground(new java.awt.Color(204, 204, 204));
        btnEvidenciaAgregar.setFont(new java.awt.Font("Roboto", 1, 10)); // NOI18N
        btnEvidenciaAgregar.setText("Agregar");
        btnEvidenciaAgregar.setEnabled(false);
        btnEvidenciaAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEvidenciaAgregarActionPerformed(evt);
            }
        });

        tblSemana.setModel(this.habilidadesModel);
        jScrollPane21.setViewportView(tblSemana);

        btnSemanaAgregar.setBackground(new java.awt.Color(0, 102, 255));
        btnSemanaAgregar.setFont(new java.awt.Font("Roboto", 1, 10)); // NOI18N
        btnSemanaAgregar.setText("Agregar");
        btnSemanaAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSemanaAgregarActionPerformed(evt);
            }
        });

        btnModificarHabilidades.setBackground(new java.awt.Color(204, 204, 204));
        btnModificarHabilidades.setFont(new java.awt.Font("Roboto", 1, 10)); // NOI18N
        btnModificarHabilidades.setText("Modificar");
        btnModificarHabilidades.setEnabled(false);
        btnModificarHabilidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarHabilidadesActionPerformed(evt);
            }
        });

        btnModificarEvidencias.setBackground(new java.awt.Color(204, 204, 204));
        btnModificarEvidencias.setFont(new java.awt.Font("Roboto", 1, 10)); // NOI18N
        btnModificarEvidencias.setText("Modificar");
        btnModificarEvidencias.setEnabled(false);
        btnModificarEvidencias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarEvidenciasActionPerformed(evt);
            }
        });

        btnHabilidadAgregar.setBackground(new java.awt.Color(204, 204, 204));
        btnHabilidadAgregar.setFont(new java.awt.Font("Roboto", 1, 10)); // NOI18N
        btnHabilidadAgregar.setText("Agregar");
        btnHabilidadAgregar.setEnabled(false);
        btnHabilidadAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHabilidadAgregarActionPerformed(evt);
            }
        });

        btnModificarSemana.setBackground(new java.awt.Color(0, 102, 255));
        btnModificarSemana.setFont(new java.awt.Font("Roboto", 1, 10)); // NOI18N
        btnModificarSemana.setText("Modificar");
        btnModificarSemana.setEnabled(false);
        btnModificarSemana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarSemanaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar2)
                .addGap(61, 61, 61))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(lblNumeroUnidad13)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(lblHabilidadReq)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHabilidadAgregar)
                        .addGap(22, 22, 22)
                        .addComponent(btnModificarHabilidades)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblSemana5))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNumeroUnidad)
                            .addComponent(lblTituloUnidad))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDesempeño, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                            .addComponent(spNumeroUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombreUnidad)))
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblSemana)
                                .addComponent(lblDesempeño))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSemanaAgregar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnModificarSemana))
                        .addComponent(jScrollPane21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
                            .addComponent(lblEvidencias)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEvidenciaAgregar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnModificarEvidencias))
                        .addComponent(jScrollPane19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lblNumeroUnidad13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spNumeroUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNumeroUnidad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTituloUnidad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDesempeño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDesempeño))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSemana)
                    .addComponent(btnSemanaAgregar)
                    .addComponent(btnModificarSemana))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane21, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSemana5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblHabilidadReq)
                        .addComponent(btnModificarHabilidades)
                        .addComponent(btnHabilidadAgregar)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEvidencias)
                    .addComponent(btnEvidenciaAgregar)
                    .addComponent(btnModificarEvidencias))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar2))
                .addContainerGap())
        );

        spNumeroSemanas.setEnabled(false);

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundLayout.createSequentialGroup()
                .addContainerGap(932, Short.MAX_VALUE)
                .addComponent(btnAceptar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar)
                .addContainerGap())
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(spNumeroSemanas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(225, 225, 225)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(704, Short.MAX_VALUE))
            .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(BackgroundLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(33, 33, 33)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(42, Short.MAX_VALUE)))
        );
        BackgroundLayout.setVerticalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(spNumeroSemanas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAceptar)
                    .addComponent(btnCancelar))
                .addContainerGap())
            .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(BackgroundLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(BackgroundLayout.createSequentialGroup()
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(55, Short.MAX_VALUE))
                        .addGroup(BackgroundLayout.createSequentialGroup()
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(36, 36, 36)))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        aceptado = false;
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed

        String nombre = txtNombreUnidad.getText().trim();

        if (nombre.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe ingresar el nombre de la unidad.");
            return;
        }

        aceptado = true;
        this.dispose();

    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        int numeroUnidad = (int) spNumeroUnidad.getValue();
        String nombreUnidad = txtNombreUnidad.getText().trim();
        String desempeño = txtDesempeño.getText().trim();

        List<Semana> semanas = semanasModel.getSemanas();
        List<HabilidadRequerida> habilidades = habilidadesModel.getHabilidades();
        List<Evidencia> evidencias = evidenciasModel.getEvidencias();

        List<FilaResumen> resumen = generarResumenUnidad();

        if (unidadActual != null) {
            // Modo edición: actualizar la existente
            unidadActual.setNumeroUnidad(numeroUnidad);
            unidadActual.setNombreUnidad(nombreUnidad);
            // si el desempeño no debe cambiar porque lo dejaste no editable, omítelo; 
            // de lo contrario: unidadActual.setDesempeño(desempeño);
            unidadActual.setSemanas(semanas);
            unidadActual.setHabilidades(habilidades);
            unidadActual.setEvidencias(evidencias);
            unidadActual.setResumen(resumen);
        } else {
            // Modo nueva unidad
            Unidad unidad = new Unidad(numeroUnidad, nombreUnidad, desempeño, semanas, habilidades, evidencias, resumen);
            unidades.add(unidad);
            unidadActual = unidad;
        }
        if (silabus.getUnidades() == null) {
        silabus.setUnidades(unidades);    
        }else{
        silabus.getUnidades().add(unidadActual);
        }
        resumenModel.setFilas(resumen);
        aceptado = true;

        JOptionPane.showMessageDialog(this, "Unidad guardada correctamente.");


    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnSemanaAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSemanaAgregarActionPerformed
        int numeroSemana = semanasModel.getRowCount() + 1;

        JTextArea txtConocimientos = new JTextArea(3, 40);
        txtConocimientos.setLineWrap(true);
        txtConocimientos.setWrapStyleWord(true);
        JScrollPane scrollConocimientos = new JScrollPane(txtConocimientos);

        JTextArea txtActividades = new JTextArea(3, 40);
        txtActividades.setLineWrap(true);
        txtActividades.setWrapStyleWord(true);
        JScrollPane scrollActividades = new JScrollPane(txtActividades);

        // Creamos panel principal
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));

        // Panel para conocimientos
        JPanel panelCono = new JPanel(new BorderLayout());
        panelCono.add(new JLabel("Conocimientos:"), BorderLayout.NORTH);
        panelCono.add(scrollConocimientos, BorderLayout.CENTER);
        panel.add(panelCono);

        // Espacio vertical
        panel.add(Box.createVerticalStrut(10));

        // Panel para actividades
        JPanel panelActi = new JPanel(new BorderLayout());
        panelActi.add(new JLabel("Actividades:"), BorderLayout.NORTH);
        panelActi.add(scrollActividades, BorderLayout.CENTER);
        panel.add(panelActi);

        // Mostramos el panel como diálogo
        int result = JOptionPane.showConfirmDialog(this, panel, "Agregar Semana",
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (result == JOptionPane.OK_OPTION) {
            String conocimientos = txtConocimientos.getText().trim();
            String actividades = txtActividades.getText().trim();

            if (conocimientos.isEmpty() || actividades.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Todos los campos deben estar llenos.");
                return;
            }

            Semana nuevaSemana = new Semana(numeroSemana, conocimientos, actividades);
            semanasModel.agregarSemana(nuevaSemana);
            spNumeroSemanas.setValue(semanasModel.getRowCount()); // sincroniza el spinner
        }
    }//GEN-LAST:event_btnSemanaAgregarActionPerformed

    private void btnEvidenciaAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEvidenciaAgregarActionPerformed
        int numeroTotalSemanas = semanasModel.getRowCount();  // Total de semanas ya cargadas

        if (numeroTotalSemanas == 0) {
            JOptionPane.showMessageDialog(this, "Primero debes establecer el número de semanas.");
            return;
        }

        JTextArea txtDescripcion = new JTextArea(5, 40);
        txtDescripcion.setLineWrap(true);
        txtDescripcion.setWrapStyleWord(true);
        JScrollPane scrollDescripcion = new JScrollPane(txtDescripcion);

        JSpinner spSemanaInicio = new JSpinner(new SpinnerNumberModel(0, 0, numeroTotalSemanas, 1));
        JSpinner spSemanaFin = new JSpinner(new SpinnerNumberModel(0, 0, numeroTotalSemanas, 1));

        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));

        JPanel panelDescripcion = new JPanel(new BorderLayout());
        panelDescripcion.add(new JLabel("Descripción:"), BorderLayout.NORTH);
        panelDescripcion.add(scrollDescripcion, BorderLayout.CENTER);
        panel.add(panelDescripcion);

        JPanel panelSemanas = new JPanel(new GridLayout(2, 2, 5, 5));
        panelSemanas.add(new JLabel("Semana Inicio:"));
        panelSemanas.add(spSemanaInicio);
        panelSemanas.add(new JLabel("Semana Fin:"));
        panelSemanas.add(spSemanaFin);
        panel.add(panelSemanas);

        int result = JOptionPane.showConfirmDialog(this, panel, "Agregar Evidencia",
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (result == JOptionPane.OK_OPTION) {
            String descripcion = txtDescripcion.getText().trim();
            int inicio = (int) spSemanaInicio.getValue();
            int fin = (int) spSemanaFin.getValue();

            if (descripcion.isEmpty()) {
                JOptionPane.showMessageDialog(this, "La descripción no puede estar vacía.");
                return;
            }
            if (inicio > fin) {
                JOptionPane.showMessageDialog(this, "La semana de inicio no puede ser mayor que la semana de fin.");
                return;
            }

            Evidencia nuevaEvidencia = new Evidencia(descripcion, new RangoSemana(inicio, fin));
            evidenciasModel.agregarEvidencia(nuevaEvidencia);

        }
    }//GEN-LAST:event_btnEvidenciaAgregarActionPerformed

    private void btnCancelar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelar2ActionPerformed
        // Limpiar semanas
        semanasModel.setSemanas(new ArrayList<>());

        // Limpiar habilidades
        habilidadesModel.setHabilidades(new ArrayList<>());

        // Limpiar evidencias
        evidenciasModel.setEvidencias(new ArrayList<>());

        // Limpiar resumen
        resumenModel.setFilas(new ArrayList<>());

        // Reiniciar spinner de semanas
        spNumeroSemanas.setValue(0);

        // Deshabilitar botones relacionados
        btnSemanaAgregar.setEnabled(false);
        btnEvidenciaAgregar.setEnabled(false);

        // Reiniciar unidad actual (modo nuevo)
        unidadActual = null;

        JOptionPane.showMessageDialog(this, "Contenido limpiado correctamente.");
    }//GEN-LAST:event_btnCancelar2ActionPerformed

    private void btnModificarHabilidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarHabilidadesActionPerformed
        int pos = tblHabilidadRequerida.getSelectedRow();
        if (pos == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona una habilidad para modificar.");
            return;
        }

        HabilidadRequerida habilidad = habilidadesModel.getHabilidad(pos);
        int numeroTotalSemanas = semanasModel.getRowCount();

        JTextArea txtDescripcion = new JTextArea(habilidad.getDescripcion(), 5, 40);
        txtDescripcion.setLineWrap(true);
        txtDescripcion.setWrapStyleWord(true);
        JScrollPane scrollDescripcion = new JScrollPane(txtDescripcion);

        JSpinner spSemanaInicio = new JSpinner(new SpinnerNumberModel(habilidad.getRango().getSemanaInicio(), 0, numeroTotalSemanas, 1));
        JSpinner spSemanaFin = new JSpinner(new SpinnerNumberModel(habilidad.getRango().getSemanaFin(), 0, numeroTotalSemanas, 1));

        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));

        JPanel panelDescripcion = new JPanel(new BorderLayout());
        panelDescripcion.add(new JLabel("Descripción:"), BorderLayout.NORTH);
        panelDescripcion.add(scrollDescripcion, BorderLayout.CENTER);
        panel.add(panelDescripcion);

        JPanel panelSemanas = new JPanel(new GridLayout(2, 2, 5, 5));
        panelSemanas.add(new JLabel("Semana Inicio:"));
        panelSemanas.add(spSemanaInicio);
        panelSemanas.add(new JLabel("Semana Fin:"));
        panelSemanas.add(spSemanaFin);
        panel.add(panelSemanas);

        int result = JOptionPane.showConfirmDialog(this, panel, "Modificar Habilidad Requerida", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (result == JOptionPane.OK_OPTION) {
            String descripcion = txtDescripcion.getText().trim();
            int inicio = (int) spSemanaInicio.getValue();
            int fin = (int) spSemanaFin.getValue();

            if (descripcion.isEmpty()) {
                JOptionPane.showMessageDialog(this, "La descripción no puede estar vacía.");
                return;
            }
            if (inicio > fin) {
                JOptionPane.showMessageDialog(this, "La semana de inicio no puede ser mayor que la semana de fin.");
                return;
            }

            HabilidadRequerida modificada = new HabilidadRequerida(descripcion, new RangoSemana(inicio, fin));
            habilidadesModel.modificarHabilidad(pos, modificada);

            resumenModel.setFilas(generarResumenUnidad());  // refrescar resumen
        }
    }//GEN-LAST:event_btnModificarHabilidadesActionPerformed

    private void btnModificarEvidenciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarEvidenciasActionPerformed
        int filaSeleccionada = tblEvidencias.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona una evidencia para modificar.");
            return;
        }

        Evidencia evidencia = evidenciasModel.getEvidencia(filaSeleccionada);
        int numeroTotalSemanas = semanasModel.getRowCount();

        JTextArea txtDescripcion = new JTextArea(evidencia.getDescripcion(), 5, 40);
        txtDescripcion.setLineWrap(true);
        txtDescripcion.setWrapStyleWord(true);
        JScrollPane scrollDescripcion = new JScrollPane(txtDescripcion);

        JSpinner spSemanaInicio = new JSpinner(new SpinnerNumberModel(evidencia.getRango().getSemanaInicio(), 0, numeroTotalSemanas, 1));
        JSpinner spSemanaFin = new JSpinner(new SpinnerNumberModel(evidencia.getRango().getSemanaFin(), 0, numeroTotalSemanas, 1));

        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));

        JPanel panelDescripcion = new JPanel(new BorderLayout());
        panelDescripcion.add(new JLabel("Descripción:"), BorderLayout.NORTH);
        panelDescripcion.add(scrollDescripcion, BorderLayout.CENTER);
        panel.add(panelDescripcion);

        JPanel panelSemanas = new JPanel(new GridLayout(2, 2, 5, 5));
        panelSemanas.add(new JLabel("Semana Inicio:"));
        panelSemanas.add(spSemanaInicio);
        panelSemanas.add(new JLabel("Semana Fin:"));
        panelSemanas.add(spSemanaFin);
        panel.add(panelSemanas);

        int result = JOptionPane.showConfirmDialog(this, panel, "Modificar Evidencia", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (result == JOptionPane.OK_OPTION) {
            String descripcion = txtDescripcion.getText().trim();
            int inicio = (int) spSemanaInicio.getValue();
            int fin = (int) spSemanaFin.getValue();

            if (descripcion.isEmpty()) {
                JOptionPane.showMessageDialog(this, "La descripción no puede estar vacía.");
                return;
            }
            if (inicio > fin) {
                JOptionPane.showMessageDialog(this, "La semana de inicio no puede ser mayor que la semana de fin.");
                return;
            }

            Evidencia modificada = new Evidencia(descripcion, new RangoSemana(inicio, fin));
            evidenciasModel.modificarEvidencia(filaSeleccionada, modificada);

            resumenModel.setFilas(generarResumenUnidad());  // refrescar resumen
        }
    }//GEN-LAST:event_btnModificarEvidenciasActionPerformed

    private void btnHabilidadAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHabilidadAgregarActionPerformed
        int numeroTotalSemanas = semanasModel.getRowCount();
        if (numeroTotalSemanas == 0) {
            JOptionPane.showMessageDialog(this, "Primero debes establecer el número de semanas.");
            return;
        }

        JTextArea txtDescripcion = new JTextArea(5, 40);
        txtDescripcion.setLineWrap(true);
        txtDescripcion.setWrapStyleWord(true);
        JScrollPane scrollDescripcion = new JScrollPane(txtDescripcion);

        JSpinner spSemanaInicio = new JSpinner(new SpinnerNumberModel(0, 0, numeroTotalSemanas, 1));
        JSpinner spSemanaFin = new JSpinner(new SpinnerNumberModel(0, 0, numeroTotalSemanas, 1));

        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));

        JPanel panelDescripcion = new JPanel(new BorderLayout());
        panelDescripcion.add(new JLabel("Descripción:"), BorderLayout.NORTH);
        panelDescripcion.add(scrollDescripcion, BorderLayout.CENTER);
        panel.add(panelDescripcion);

        JPanel panelSemanas = new JPanel(new GridLayout(2, 2, 5, 5));
        panelSemanas.add(new JLabel("Semana Inicio:"));
        panelSemanas.add(spSemanaInicio);
        panelSemanas.add(new JLabel("Semana Fin:"));
        panelSemanas.add(spSemanaFin);
        panel.add(panelSemanas);

        int result = JOptionPane.showConfirmDialog(this, panel, "Agregar Habilidad Requerida",
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (result == JOptionPane.OK_OPTION) {
            String descripcion = txtDescripcion.getText().trim();
            int inicio = (int) spSemanaInicio.getValue();
            int fin = (int) spSemanaFin.getValue();

            if (descripcion.isEmpty()) {
                JOptionPane.showMessageDialog(this, "La descripción no puede estar vacía.");
                return;
            }
            if (inicio > fin) {
                JOptionPane.showMessageDialog(this, "La semana de inicio no puede ser mayor que la semana de fin.");
                return;
            }

            HabilidadRequerida nuevaHabilidad = new HabilidadRequerida(descripcion, new RangoSemana(inicio, fin));
            habilidadesModel.agregarHabilidad(nuevaHabilidad);
        }
    }//GEN-LAST:event_btnHabilidadAgregarActionPerformed

    private void btnModificarSemanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarSemanaActionPerformed
        int filaSeleccionada = tblSemana.getSelectedRow();

        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona una semana para modificar.");
            return;
        }

        Semana semana = semanasModel.getSemana(filaSeleccionada); // obtén la semana seleccionada

        // Campos pre-llenados con los datos actuales
        JTextArea txtConocimientos = new JTextArea(semana.getConocimientos(), 3, 40);
        txtConocimientos.setLineWrap(true);
        txtConocimientos.setWrapStyleWord(true);
        JScrollPane scrollConocimientos = new JScrollPane(txtConocimientos);

        JTextArea txtActividades = new JTextArea(semana.getActividades(), 3, 40);
        txtActividades.setLineWrap(true);
        txtActividades.setWrapStyleWord(true);
        JScrollPane scrollActividades = new JScrollPane(txtActividades);

        // Panel de edición
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));

        JPanel panelCono = new JPanel(new BorderLayout());
        panelCono.add(new JLabel("Conocimientos"), BorderLayout.NORTH);
        panelCono.add(scrollConocimientos, BorderLayout.CENTER);
        panel.add(panelCono);
        panel.add(Box.createVerticalStrut(10));

        JPanel panelActi = new JPanel(new BorderLayout());
        panelActi.add(new JLabel("Actividades"), BorderLayout.NORTH);
        panelActi.add(scrollActividades, BorderLayout.CENTER);
        panel.add(panelActi);

        // Mostrar diálogo
        int result = JOptionPane.showConfirmDialog(this, panel, "Editar Semana",
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (result == JOptionPane.OK_OPTION) {
            String conocimientos = txtConocimientos.getText().trim();
            String actividades = txtActividades.getText().trim();

            if (conocimientos.isEmpty() || actividades.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Todos los campos deben estar llenos.");
                return;
            }

            semana.setConocimientos(conocimientos);
            semana.setActividades(actividades);

            semanasModel.fireTableRowsUpdated(filaSeleccionada, filaSeleccionada);
        }
    }//GEN-LAST:event_btnModificarSemanaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDFormularioUnidad.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDFormularioUnidad.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDFormularioUnidad.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDFormularioUnidad.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDFormularioUnidad dialog = new JDFormularioUnidad(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Background;
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCancelar2;
    private javax.swing.JButton btnEvidenciaAgregar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnHabilidadAgregar;
    private javax.swing.JButton btnModificarEvidencias;
    private javax.swing.JButton btnModificarHabilidades;
    private javax.swing.JButton btnModificarSemana;
    private javax.swing.JButton btnSemanaAgregar;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblDesempeño;
    private javax.swing.JLabel lblEvidencias;
    private javax.swing.JLabel lblHabilidadReq;
    private javax.swing.JLabel lblNumeroUnidad;
    private javax.swing.JLabel lblNumeroUnidad11;
    private javax.swing.JLabel lblNumeroUnidad13;
    private javax.swing.JLabel lblSemana;
    private javax.swing.JLabel lblSemana5;
    private javax.swing.JLabel lblTituloUnidad;
    private javax.swing.JSpinner spNumeroSemanas;
    private javax.swing.JSpinner spNumeroUnidad;
    private javax.swing.JTable tblEvidencias;
    private javax.swing.JTable tblHabilidadRequerida;
    private javax.swing.JTable tblResumenUnidad;
    private javax.swing.JTable tblSemana;
    private javax.swing.JTextField txtDesempeño;
    private javax.swing.JTextField txtNombreUnidad;
    // End of variables declaration//GEN-END:variables

    public void setDatosUnidad(int numeroUnidad, String nombreUnidad, String desempeño) {
        spNumeroUnidad.setValue(numeroUnidad);
        txtNombreUnidad.setText(nombreUnidad);
        txtDesempeño.setText(desempeño);
        txtDesempeño.setEditable(false);
    }

    public void setUnidadCompleta(Unidad unidad) {

        this.unidadActual = unidad;

        spNumeroUnidad.setValue(unidad.getNumeroUnidad());
        txtNombreUnidad.setText(unidad.getNombreUnidad());
        txtDesempeño.setText(unidad.getDesempeño());

        List<Semana> semanas = unidad.getSemanas();
        semanasModel.setSemanas(semanas); // cargar semanas

        // Ajustar el spinner para reflejar el número de semanas existentes
        int cantidad = semanas.size();
        SpinnerNumberModel snm = (SpinnerNumberModel) spNumeroSemanas.getModel();
        if (cantidad > ((Number) snm.getMaximum()).intValue()) {
            snm.setMaximum(cantidad);
        }
        // Esto disparará spNumeroSemanasStateChanged(), pero como el valor es igual al tamaño
        // no se perderán las semanas cargadas (ajustarCantidadFilas con la misma cantidad es no-op en contenido).
        spNumeroSemanas.setValue(cantidad);
        habilidadesModel.setHabilidades(unidad.getHabilidades()); // cargar habilidades
        evidenciasModel.setEvidencias(unidad.getEvidencias());    // cargar evidencias
        resumenModel.setFilas(unidad.getResumen());          // cargar resumen

        btnSemanaAgregar.setEnabled(true);
        btnEvidenciaAgregar.setEnabled(true);
        btnHabilidadAgregar.setEnabled(true);
        btnModificarHabilidades.setEnabled(true);
        btnModificarEvidencias.setEnabled(true);
        btnModificarSemana.setEnabled(true);
    }

    private void spNumeroSemanasStateChanged() {

        int cantidad = (int) spNumeroSemanas.getValue();
        semanasModel.ajustarCantidadFilas(cantidad);

        // desabilita los botones si no hay semanas
        btnHabilidadAgregar.setEnabled(semanasModel.getRowCount() > 0);
        btnEvidenciaAgregar.setEnabled(semanasModel.getRowCount() > 0);
    }

    public List<FilaResumen> generarResumenUnidad() {
        List<FilaResumen> resumen = new ArrayList<>();
        int totalSemanas = semanasModel.getRowCount();

        for (int i = 0; i < totalSemanas; i++) {
            int semana = i + 1;
            String conocimiento = semanasModel.getConocimiento(i);
            String actividad = semanasModel.getActividad(i);

            List<String> evidenciasSemana = new ArrayList<>();
            for (Evidencia evidencia : this.evidenciasModel.getEvidencias()) {
                if (evidencia.getRango().contieneSemana(semana)) {
                    evidenciasSemana.add(evidencia.getDescripcion());
                }
            }

            List<String> habilidadesSemana = new ArrayList<>();
            for (HabilidadRequerida habilidad : this.habilidadesModel.getHabilidades()) {
                if (habilidad.getRango().contieneSemana(semana)) {
                    habilidadesSemana.add(habilidad.getDescripcion());
                }
            }

            resumen.add(new FilaResumen(semana, conocimiento, actividad, habilidadesSemana, evidenciasSemana));
        }

        return resumen;
    }

    public boolean isAceptado() {
        return this.aceptado;
    }

    public String getNombreUnidad() {
        return txtNombreUnidad.getText();
    }

}
