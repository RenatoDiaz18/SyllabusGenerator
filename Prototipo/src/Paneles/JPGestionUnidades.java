package Paneles;

import Clases.Desempeño;
import Clases.Silabo;
import Clases.Unidad;
import Data.Data;
import java.util.List;
import javax.swing.JOptionPane;
import prototipo.JDFormularioUnidad;
import prototipo.JFGenerador;
import prototipo.modelos.table.GestionUnidadesTableModel;

public class JPGestionUnidades extends javax.swing.JPanel {

    private GestionUnidadesTableModel modelo;
    private List<Desempeño> desempeños;
    private JFGenerador padre;
     private Silabo silabo;

    public JPGestionUnidades(List<Desempeño> desempeño, JFGenerador padre, Silabo silabo) {
        this.modelo = new GestionUnidadesTableModel(desempeño);
        this.desempeños = desempeño;
        this.silabo = silabo;
        this.padre = padre;
        initComponents();
        tblGestionUnidad.getColumnModel().getColumn(0).setMinWidth(40);
        tblGestionUnidad.getColumnModel().getColumn(0).setMaxWidth(40);

        this.ajustarAnchoColumnaDescripcion(1);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panInformacionGeneral = new javax.swing.JPanel();
        lblInformacionGeneral = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGestionUnidad = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        Modificar = new javax.swing.JButton();
        btnSiguente = new javax.swing.JButton();

        panInformacionGeneral.setBackground(new java.awt.Color(255, 255, 255));

        lblInformacionGeneral.setFont(new java.awt.Font("Roboto", 1, 10)); // NOI18N
        lblInformacionGeneral.setForeground(new java.awt.Color(0, 153, 255));
        lblInformacionGeneral.setText("•    Programas de contenidos    ");

        tblGestionUnidad.setBackground(new java.awt.Color(204, 204, 204));
        tblGestionUnidad.setFont(new java.awt.Font("SF UI  Text Med", 1, 14)); // NOI18N
        tblGestionUnidad.setModel(this.modelo);
        jScrollPane1.setViewportView(tblGestionUnidad);

        jPanel2.setBackground(new java.awt.Color(0, 102, 255));

        btnAgregar.setBackground(new java.awt.Color(0, 153, 255));
        btnAgregar.setFont(new java.awt.Font("SF UI  Text Med", 1, 14)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregar.setText("Agregar");
        btnAgregar.setBorder(null);
        btnAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        Modificar.setBackground(new java.awt.Color(0, 153, 255));
        Modificar.setFont(new java.awt.Font("SF UI  Text Med", 1, 14)); // NOI18N
        Modificar.setForeground(new java.awt.Color(255, 255, 255));
        Modificar.setText("Modificar");
        Modificar.setBorder(null);
        Modificar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        btnSiguente.setBackground(new java.awt.Color(0, 102, 204));
        btnSiguente.setFont(new java.awt.Font("SF UI  Text Med", 1, 14)); // NOI18N
        btnSiguente.setForeground(new java.awt.Color(255, 255, 255));
        btnSiguente.setText("Siguiente");
        btnSiguente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSiguente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguenteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Modificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnSiguente, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(228, Short.MAX_VALUE)
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(Modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(139, 139, 139)
                .addComponent(btnSiguente)
                .addGap(63, 63, 63))
        );

        javax.swing.GroupLayout panInformacionGeneralLayout = new javax.swing.GroupLayout(panInformacionGeneral);
        panInformacionGeneral.setLayout(panInformacionGeneralLayout);
        panInformacionGeneralLayout.setHorizontalGroup(
            panInformacionGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panInformacionGeneralLayout.createSequentialGroup()
                .addGroup(panInformacionGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panInformacionGeneralLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
                        .addGap(38, 38, 38))
                    .addGroup(panInformacionGeneralLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblInformacionGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panInformacionGeneralLayout.setVerticalGroup(
            panInformacionGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panInformacionGeneralLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(lblInformacionGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                .addGap(99, 99, 99))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panInformacionGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panInformacionGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        int pos = tblGestionUnidad.getSelectedRow();

        if (pos > -1) {
            if (modelo.yaFueAgregado(pos)) {
                JOptionPane.showMessageDialog(this,
                        "Esta unidad ya fue registrada. Use 'Modificar' si desea cambiarla.",
                        "Unidad ya agregada",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }

            int numeroUnidad = pos + 1;
            String nombreUnidad = modelo.getNombreUnidad(pos);
            String desempeño = modelo.getDesempeño(pos).getDescripcion();

            JDFormularioUnidad frm = new JDFormularioUnidad(null, true);
            frm.setDatosUnidad(numeroUnidad, nombreUnidad, desempeño);
            frm.setVisible(true);

            if (frm.isAceptado()) {
                modelo.setNombreUnidad(pos, frm.getNombreUnidad()); // por si modificó nombre
                modelo.marcarComoAgregado(pos); // lo marcamos como ya agregado
            }

        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una unidad para agregar.");
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
        int pos = tblGestionUnidad.getSelectedRow();

        if (pos > -1) {
            int numeroUnidad = pos + 1;

            Unidad unidad = buscarUnidadPorNumero(numeroUnidad);

            if (unidad == null) {
                JOptionPane.showMessageDialog(this, "Esta unidad aún no ha sido registrada.");
                return;
            }

            JDFormularioUnidad frm = new JDFormularioUnidad(null, true);
            frm.setUnidadCompleta(unidad);
            frm.setVisible(true);

            if (frm.isAceptado()) {
                modelo.setNombreUnidad(pos, frm.getNombreUnidad());
            }

        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una unidad para modificar.");
        }
    }//GEN-LAST:event_ModificarActionPerformed

    private void btnSiguenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguenteActionPerformed
        JPSistemaEvaluacion panelEvaluacion = new JPSistemaEvaluacion(this.desempeños, this.padre, this. silabo);
        this.padre.cambiarPanel(panelEvaluacion);
    }//GEN-LAST:event_btnSiguenteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Modificar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnSiguente;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblInformacionGeneral;
    private javax.swing.JPanel panInformacionGeneral;
    private javax.swing.JTable tblGestionUnidad;
    // End of variables declaration//GEN-END:variables

    public List<String> getUnidades() {
        return this.modelo.getNombresUnidades();
    }

    private void ajustarAnchoColumnaDescripcion(int colIndex) {
        int maxCaracteres = 0;

        for (Desempeño d : desempeños) {
            if (d != null && d.getDescripcion() != null) {
                int longitud = d.getDescripcion().length();
                if (longitud > maxCaracteres) {
                    maxCaracteres = longitud;
                }
            }
        }

        // Aproximadamente 7 píxeles por carácter + margen
        int anchoEstimado = maxCaracteres * 4 + 5;

        // Establece un límite razonable para que no se extienda demasiado
        int anchoMaximo = 500;
        int anchoMinimo = 150;

        anchoEstimado = Math.max(anchoEstimado, anchoMinimo);
        anchoEstimado = Math.min(anchoEstimado, anchoMaximo);

        tblGestionUnidad.getColumnModel().getColumn(colIndex).setPreferredWidth(anchoEstimado);
    }

    private Unidad buscarUnidadPorNumero(int numero) {
        for (Unidad u : Data.unidades) {
            if (u.getNumeroUnidad() == numero) {
                return u;
            }
        }
        return null;
    }

}
